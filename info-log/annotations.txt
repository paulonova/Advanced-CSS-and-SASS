
** ADVANCED CSS AND 

**CSS Animation:

@keyframes  and   animations properties.

** TO ANIMATE BUTTON:

* I can use the pseudo element ::after
* Use the same properties to it.
* Positionate it using position relative and absolute
* z-index: -1 to send it back to the button.



** WORKING WITH SASS **********************
*******************************************
https://webdesign.tutsplus.com/tutorials/watch-and-compile-sass-in-five-quick-steps--cms-28275

* npm install node-sass --save-dev
* In package.json write a script:
"scripts": {
  "scss": "node-sass --watch scss/main.scss css/style.css"
}

This will render the SASS into the css file style.css.
then write in console:  'npm run scss'

install globaly =>  'npm install live-server -g'
run => 'live-server'

** GRIDS: ****
I create grids using calc().
ex: .col-3-of-4{
    width: calc(3 * ((100% - 3*#{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal}));
  }
  
  ** UTILITIES CLASSES ****
  I created some utilities classes to help with some small tasks.

  'u-center-text', 'u-margin-bottom-8' etc..

XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

** RESPONSIVE DESIGN 

1- Desktop-first
2- Mobile-first

Screen Sizes:

'max-width:' usses to desktop-first
'min-width:' uses to mobile-first

1 for mobile                      0 to 600 px
1 for portrait tablets            600 to 900 px
1 for landscape tablets           900 to 1200 px
1 for desktop                     1200 to 1800 px
1 for big desktop                 1800 to ->

ps: That can be more, but these are the basics.


** RESPONSIVE IMAGES in HTML

1- srcset attribute in <img> and <source>
2- Use <picture>
3- Media Queries in html

<img srcset="img/logo-green-1x.png 1x, img/logo-green-2x.png 2x" alt="Footer Logo" class="footer__logo">
'srcset' change the image resolution depending on screen resolution, 'lower-res => 1x'  and 'higher-res => 2x'
https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images

Density and Resolution:
'<picture>' Is possible to specify more then one source for the pictures in different screen sizes.
            1x = low resolution
            2x = hight resolution
            ** The browser choose authomatic

<picture>
  <source media="(min-width: 650px)" srcset="img_pink_flowers-1x.jpg 1x, img_pink_flowers-2x.jpg 2x">
  <source media="(min-width: 465px)" srcset="img_white_flower.jpg">
  <img src="img_orange_flowers.jpg" alt="Flowers" style="width:auto;">
</picture>



** RESPONSIVE IMAGES in CSS

@media (min-resolution: 192dpi) and (min-width: 37.5em), (min-width: 112.5em){}


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

** Testing for Browser Support with '@supports'

Possible to implement differents fitures in diferents browsers '(Chrome, Safari, Firefox, etc.)'


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

** Setting up a Simple Build Process with NPM Scripts

Install:  'npm install concat --save-dev'

"scripts": {
    "watch:sass": "node-sass --watch sass/main.scss css/style.css",
    "compile:sass": "node-sass --watch sass/main.scss css/style.comp.css",
    "concat:css": "concat -o css/style.concat.css css/icon-font.css css/style.comp.css"  ==> To mix two or more css files in one.
  },

Install: 
  'npm install autoprefixer --save-dev'
  'npm install postcss-cli --save-dev'

